# src/compass_brca/step02_audit_raw_data.py
# DEFINITIVE VERSION
import sys
from pathlib import Path
import pandas as pd
from datetime import datetime
from rich.console import Console
from rich.table import Table

try:
    from compass_brca.pipeline_config import RAW_DATA_DIR, REPORTS_DIR
except ImportError:
    sys.path.append(str(Path(__file__).resolve().parents[2]))
    from src.compass_brca.pipeline_config import RAW_DATA_DIR, REPORTS_DIR

console = Console()

def main():
    console.rule("[bold magenta]Step 02: Audit Raw Data[/]")
    if not RAW_DATA_DIR.exists() or not any(RAW_DATA_DIR.iterdir()):
        console.print(f"[bold yellow]Warning: Raw data directory {RAW_DATA_DIR} is empty. Skipping audit.[/]")
        return
    REPORTS_DIR.mkdir(exist_ok=True)
    report_path = REPORTS_DIR / f"raw_data_audit_{datetime.now():%Y%m%d_%H%M%S}.csv"
    file_data = []
    for path in RAW_DATA_DIR.rglob("*"):
        if path.is_file():
            try:
                file_data.append({
                    "filename": path.name, "parent_folder": path.parent.name,
                    "size_mb": round(path.stat().st_size / (1024 * 1024), 2),
                    "extension": path.suffix,
                    "last_modified": datetime.fromtimestamp(path.stat().st_mtime).strftime('%Y-%m-%d %H:%M:%S')
                })
            except Exception as e:
                console.print(f"[red]Could not process file {path}: {e}[/]")
    if not file_data:
        console.print("[yellow]No files found to audit.[/]"); return
    audit_df = pd.DataFrame(file_data)
    audit_df.to_csv(report_path, index=False)
    console.print(f"Audit complete. Found [cyan]{len(audit_df)}[/] files.")
    table = Table(title="Raw Data Audit Summary")
    for col in ["Parent Folder", "File Count", "Total Size (MB)"]:
        table.add_column(col, justify="left" if "Folder" in col else "right")
    summary = audit_df.groupby('parent_folder').agg(file_count=('filename', 'count'), total_size_mb=('size_mb', 'sum')).reset_index()
    for _, row in summary.iterrows():
        table.add_row(row['parent_folder'], str(row['file_count']), f"{row['total_size_mb']:.2f}")
    console.print(table)
    console.print(f"\n[bold]Full audit report saved to:[/]\n[dim]{report_path}[/]")
    console.rule("[bold green]Step 02: Audit Raw Data - COMPLETED[/]")

if __name__ == "__main__":
    main()